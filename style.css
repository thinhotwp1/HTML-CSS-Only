
@import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:ital,wght@0,500;1,500&family=Poppins:wght@300;400;500;600;700;800&display=swap');
/* ------------- *ROOT VARAIBLES* ------------- */
:root{
    --color-primary: #7380ec;
    --color-danger:#ff7782;
    --color-success: #41f1b6;
    --color-warning:#ffbb55;
    --color-white: #fff;
    --color-info-dark:#7d8da1;
    --color-info-light:#dce1eb;
    --color-dark: #363949;
    --color-light:rgba(132,139,200,0.18);
    /* --color-light:red; */
    --color-primary-variant: #111e88;
    --color-dark-variant:#677483;
    --color-background:#f6f6f9;

    --card-border-radius: 2rem;
    --border-radius-1: 0.4rem;
    --border-radius-2: 0.8rem;
    --border-radius-3: 1.2rem;

    --card-padding: 1.8rem;
    --padding-1: 1.2rem;

    --box-shadow: 0 2rem 3rem var(--color-light);


}

*{
    margin: 0;
    padding: 0;
    outline: 0;
    appearance: none; 
    /* appearance: none;: Thuộc tính này cho phép bạn ẩn giao diện mặc định 
    của một phần tử, chẳng hạn như input type="checkbox" hoặc input type="radio".  */
    border: 0;
    text-decoration: none; 
    /* text-decoration: Thuộc tính này được sử dụng để gỡ bỏ gạch chân từ văn bản trong các liên kết. */
    list-style: none;
    /* Thuộc tính này gỡ bỏ kiểu đánh dấu (list-style) mặc định của danh sách (ul, ol) hoặc các phần tử liên quan như li. Khi bạn đặt giá trị này thành "none," không có các biểu tượng đánh dấu hoặc số thứ tự sẽ xuất hiện. */
    box-sizing: border-box;
    /* kích thước tổng cộng của phần tử sẽ bao gồm cả độ dày viền và padding, và nội dung trong phần tử sẽ không bị thay đổi kích thước khi bạn thay đổi độ dày của viền hoặc padding. */
}

html{
    font-size: 14px;
}

body{
    width: 100vw;
    height: 100vh;
    font-family: poppins, sans-serif;
    font-size: 0.88rem;
    background: var(--color-background);
    user-select: none;
    overflow-x: hidden;
    color: var(--color-dark);
}

.container{
    display: grid;
    /* display: grid;: Thuộc tính này thiết lập phần tử có lớp .container để sử dụng CSS Grid làm cơ chế sắp xếp. CSS Grid cho phép bạn tạo các lưới đa chiều để căn chỉnh các phần tử con. */
    width: 96%;
    /* width: 96%;: Đây là chiều rộng của phần tử có lớp .container, nó được đặt là 96% của chiều rộng của phần tử chứa nó. Điều này giúp phần tử .container giữ một phần rộng của không gian */
    margin: 0 auto;
    gap: 1.8rem;
    /* gap: 1.8rem;: Đây là khoảng cách (khoảng trống) giữa các phần tử con bên trong lưới. Khoảng cách này được đặt thành 1.8 rem, tạo ra khoảng cách dọc giữa các phần tử con. */
    grid-template-columns: 14rem auto 23rem;
    /* grid-template-columns: 14rem auto 23rem;: Đây là cách bạn định nghĩa cột cho lưới. Cụ thể, bạn đang định nghĩa ba cột với các kích thước khác nhau. Cột đầu tiên có chiều rộng 14rem, cột thứ hai sẽ tự động điều chỉnh kích thước để lấp đầy không gian còn lại trong lưới, và cột cuối cùng có chiều rộng 23rem. */
}

a{
    color: var(--color-dark);
}

img{
    display: block;
    width: 100%;
}

h1{
    font-weight: 800;
    font-size: 1.8rem;
}

h2{
    font-size: 1.4rem;
}

h3{
    font-size: 0.87rem  ;
}

h4{
    font-size: 0.8rem;
}

h5{
    font-size: 0.77rem;
}

small{
    font-size: 0.75rem;
}

p{
    color: var(--color-dark-variant);
}

.text-muted{
    color: var(--color-info-dark);
}

b{
    color: var(--color-dark);
}

.primary{
    color: var(--color-primary);
}

.danger{
    color: var(--color-danger);
}

.success{
    color: var(--color-success);
}

.warning{
    color: var(--color-warning);
}


.profile-photo{
    margin-left: 0.5rem;
    margin-right: 1rem;
    width: 2.8rem;
    height: 2.8rem;
    border-radius: 50%;
    overflow: hidden;
}


aside{
    height: 100vh;
    background: white;  
}

aside .top{
    background: white;
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-top: 1.4rem;
}

aside .logo{
    display: flex;
    gap: 0.8rem;
}

aside .text_logo{
    font-size: 20px;
    margin-top: 0.8rem;
}

aside .logo img{
    width: 6rem;
    height: 6rem;
}

aside .close{
    display: none;
}


/* ============== SIDEBAR ============== */
aside .sidebar{
    background: white;
    display: flex;
    flex-direction: column;
    height: 86vh;
    position: relative;
    top:3rem
}

aside h3{
    font-weight: 500;
}

aside .sidebar a{
    display: flex;
    color: var(--color-info-dark);
    margin-left: 2rem;
    gap: 1rem;
    align-items: center;
    position: relative;
    height: 3.7rem;
    transition: all 300ms ease;
}

aside .sidebar a span{
    font-size: 1.6rem;
    transition: all 300ms ease;
    /* Với khai báo transition: all 300ms ease;, khi một thuộc tính nào đó của phần tử thay đổi, chẳng hạn như màu sắc, kích thước hoặc vị trí, thì chuyển đổi sẽ diễn ra trong khoảng thời gian 300 mili giây và sử dụng hàm ease để tạo hiệu ứng mềm mại.  */
}

aside .sidebar a:last-child{
    position: absolute;
    bottom: 5rem;
    width: 100%;
}

aside .sidebar a.active{
    background: var(--color-light);
    color: var(--color-primary);
    margin-left: 0;
}

aside .sidebar a.active:before{
    content: "";
    width: 6px;
    height: 100%;
    background: var(--color-primary);
}

aside .sidebar a.active span {
    color: var(--color-primary);
    margin-left: calc(1rem-3px);
}

aside .sidebar a:hover{
    color: var(--color-primary);
}

aside .sidebar a:hover span{
    margin-left: 1rem;
}

 /* ============== MAIN ============== */

 main{
    margin-top: 1.4rem
}

main .date{
    display: inline-block;
    background: var(--color-light);
    border-radius: var(--border-radius-1);
    margin-top: 1rem;
    padding: 0.5rem 1.6rem;
}

main .date input[type="date"]{
    background: transparent;
    color: var(--color-dark);
}

main .insights{
    display: flex;
    grid-template-columns: repeat(3,1fr);
    gap:1.6rem;
}

main .insights > div{
    background: var(--color-white);
    padding: var(--card-padding);
    border-radius: var(--card-border-radius);
    margin-top: 1rem;
    box-shadow: var(--box-shadow);
    transition: all 300ms ease;
}

main .insights > div:hover{
    box-shadow: none;
}

main .insights > div span{
    background: var(--color-primary);
    padding: 0.5rem;
    border-radius: 50%;
    color: var(--color-white);
}

main .insights > div.column2 span {
    background: var(--color-danger);
}

main .insights > div.column3 span {
    background: var(--color-success);
}

main .insights > div.middle{
    display: flex;
    align-items: center;

}

main .insights svg{
    width: 7rem;
    height: 7rem;
}

main .insights svg circle{
    fill: none;
    stroke: var(--color-primary);
    stroke-width: 14;
    stroke-linecap: round;
    transform: translate(5px,5px);
    stroke-dasharray: 110;
    stroke-dashoffset: 92;
}

main .insights .column1 svg circle{
    stroke-dasharray: 180;
    stroke-dashoffset: -40;
}

main .insights .column2 svg circle{
    stroke-dasharray: 250;
    stroke-dashoffset: -30;
}

main .insights .column3 svg circle{
    stroke-dasharray: 200;
    stroke-dashoffset: -10;
}

main .insights small{
    margin-top: 1.2rem;
    display: block;
}

 /* =========== RECENT ORDER =========== */

 main .recent-orders{
    margin-top: 2rem;
 }

 main.recent-orders h2{
    margin-bottom: 0.8rem;
 }

 main .recent-orders table{
    background: var(--color-white);
    width: 100%;
    border-radius: var(--card-border-radius);
    padding: var(--card-padding);
    text-align: center;
    box-shadow: var(--box-shadow);
    transition: all 300ms ease;
 }

 main .recent-orders table:hover{
    box-shadow: none;
 }

 main table tbody td{
    height: 2.8rem;
    border-bottom: 1px solid var(--color-light);
    color: var(--color-dark-variant);
 }

 main table tbody tr:last-child td{
    border: none;
 }

 main .recent-orders a{
    text-align: center; 
    /* text-align: center; làm text ra giữa div  */
    display: block;
    margin: 1rem auto;
    color: var(--color-primary);
 }


    /* ================ RIGHT ============== */
 .right {
    margin-top: 1.4rem;
 }

 .right .top{
    display: flex;
    justify-content: end;
    gap: 2rem;
 }

 .right .top button{
    display: none;
 }

 .right .theme-toggler{
    background: var(--color-light);
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 1.6rem;
    width: 4.2rem;
    cursor: pointer;
    border-radius: var(--border-radius-1);
 }

 .right .theme-toggler span{
    font-size: 1.2rem;
    width: 50%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
 }

 .right .theme-toggler span.active{
    background: var(--color-primary);
    color: white;
    border-radius: var(--border-radius-1);
 }

 .right .top .profile{
    display: flex;
    gap: 2 rem;
    text-align: right;
 }

 /* ============= RECENT UPDATE ============= */

 .right .recent-updates{
    margin-top: 1rem;
 }

 .right .recent-updates h2{
    margin-bottom: 1re0.8rem;
 }

 .right .recent-updates .updates{
    background: var(--color-white);
    padding: var(--card-padding);
    border-radius: var(--card-border-radius);
    box-shadow: var(--box-shadow);
    transition: all 300ms ease;
}

.right .recent-updates .updates:hover{
    box-shadow: none;
 }


.right .recent-updates .updates .update{
    display: grid;
    grid-template-columns: 2.6rem auto;
    gap: 1rem;
    margin-bottom: 1rem;
    
}

  .sales-analytics {
    margin-top: 1rem;
    background: var(--color-white);
    width: 100%;
    border-radius: var(--card-border-radius);
    padding: var(--card-padding);
    box-shadow: var(--box-shadow);
    transition: all 300ms ease;
 }

 .sales-analytics:hover{
    box-shadow: none;
 }

 /* ========= CHANGE BACKGROUND ========== */

@media screen and (max-width:1200px){
    .container{
        width: 94%;
        grid-template-columns: 7rem auto 23rem;
    }

    aside .logo h2{
        display: none;
    }

    aside .sidebar h3{
        display: none;
    }

    aside .sidebar a{
        width: 5.6rem;
    }

    aside .sidebar a:last-child{
        position: relative;
        margin-top: 1.8rem;
    }

    main .insights{
        grid-template-columns: 1fr;
        gap: 0;
    }

    main .recent-orders{
        width: 94%;
        position: absolute;
        left: 50%;
        transform: translateX(-50%);
        margin: 2rem 0 0 8.8rem;
    }

    main .recent-orders table {
        width: 83vw;
    }

    main table thread tr th:last-child,
    main table thread tr th:first-child{
        display: none;
    }

    main table tbody tr th:last-child,
    main table tbody tr th:first-child{
        display: none;
    }


    /* 1:10:30 */



    

    
}